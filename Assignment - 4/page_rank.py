import random as rd
import operator
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import networkx as nx

#Will Consider following Examples for number of iterations: 1) 600 2) 9999 3) 6000000
val = input("Enter number of Iterations for Page Rank Algorithm: ")
# created a directed graph
graph = nx.gnp_random_graph(25, 0.6, directed=True)

# draw a graph
nx.draw(graph, with_labels=True, font_color='white', font_size=10, node_color='green')

# plot a graph
plt.show()

count = graph.number_of_nodes()
print(list(graph.neighbors(1)))

# Page Rank Algorithm-Calculating random walk score
rank_dict = {}
x = rd.randint(0, 25)
for j in range(0, 25):
    rank_dict[j] = 0
rank_dict[x] = rank_dict[x]+1
for i in range(int(val)):
    list_n = list(graph.neighbors(x))
    if(len(list_n) == 0):
        x = rd.randint(0, 25)
        rank_dict[x] = rank_dict[x]+1
    else:
        x = rd.choice(list_n)
        rank_dict[x] = rank_dict[x]+1

print("Random Walk Score Updated")

# normalising values
for j in range(0, 25):
    rank_dict[j] = rank_dict[j]/(int(val))

# Page rank by networkx library
pagerank = nx.pagerank(graph)

# sorting both dictionaries based on items
pagerank_sorted = sorted(
    pagerank.items(), key=lambda v: (v[1], v[0]), reverse=True)

pagerank_sorted

# sorting the rank_dict based on values
rank_dict_sorted = sorted(
    rank_dict.items(), key=lambda v: (v[1], v[0]), reverse=True)

rank_dict_sorted

print("The order generated by the implementation of given algorithm is:\n")
for i in rank_dict_sorted:
    print(i[0], end=" ")
print("\n\nThe order generated by networkx library is:\n")
for i in pagerank_sorted:
    print(i[0], end=" ")
